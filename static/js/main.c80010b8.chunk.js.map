{"version":3,"sources":["reportWebVitals.js","redux/form.js","redux/ActionTypes.js","redux/campsites.js","redux/comments.js","shared/partners.js","redux/partners.js","redux/promotions.js","components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/DirectoryComponent.js","components/CampsiteInfoComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","components/MainComponent.js","App.js","redux/configureStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","InitialFeedback","firstName","lastName","phoneNum","email","agree","contactType","feedback","ADD_COMMENT","CAMPSITES_LOADING","CAMPSITES_FAILED","ADD_CAMPSITES","ADD_COMMENTS","COMMENTS_FAILED","PROMOTIONS_LOADING","ADD_PROMOTIONS","PROMOTIONS_FAILED","Campsites","state","isLoading","errMess","campsites","action","type","ActionTypes","payload","Comments","comments","comment","concat","PARTNERS","id","name","image","featured","description","Partners","Promotions","promotions","Loading","className","baseUrl","RenderCard","item","in","transformProps","exitTransform","Card","CardImg","src","alt","CardBody","CardTitle","CardText","Home","props","campsite","campsitesLoading","campsitesErrMess","promotion","promotionLoading","promotionErrMess","partner","RenderDirectoryItem","to","width","CardImgOverlay","Directory","directory","map","Breadcrumb","BreadcrumbItem","active","maxLength","len","val","length","RenderCampsite","top","RenderComments","postComment","campsiteId","text","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","rating","Fragment","Button","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Label","htmlFor","select","model","value","placeholder","validators","minLength","show","component","messages","textarea","color","Component","CampsiteInfo","class","Header","toggleNav","isNavOpen","handleLogin","event","alert","username","password","remember","checked","preventDefault","Jumbotron","fluid","Navbar","dark","sticky","expand","NavbarBrand","href","height","NavbarToggler","Collapse","navbar","Nav","NavItem","Form","FormGroup","Input","innerRef","input","check","Footer","role","required","isNumber","isNaN","validEmail","test","Contact","console","log","JSON","stringify","resetFeedbackForm","Row","md","Col","size","offset","checkbox","rows","RenderPartner","Media","object","body","heading","About","partners","tag","CardHeader","title","list","campsitesFailed","addCampsites","commentsFailed","addComments","dispatch","newComment","toISOString","fetch","method","headers","response","ok","error","Error","status","statusText","json","catch","message","promotionsLoading","promotionsFailed","addPromotions","mapDispatchToProps","fetchCampsites","actions","reset","fetchComments","fetchPromotions","Main","TransitionGroup","CSSTransition","classNames","timeout","path","filter","exact","render","match","params","commentsErrMess","location","key","withRouter","connect","store","createStore","combineReducers","createForms","feedbackForm","applyMiddleware","thunk","logger","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c80010b8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const InitialFeedback = {\n    firstName: '',\n    lastName: '',\n    phoneNum: '',\n    email: '',\n    agree: false,\n    contactType: 'Phone',\n    feedback: ''\n};","// Gather all action types here as exported string constants\n// The action names will be imported into and defined in ActionCreator.js\n// These are all the different ways the state can be changed\nexport const ADD_COMMENT = 'ADD_COMMENT';\n\n// Actions handled by Middleware\nexport const CAMPSITES_LOADING = 'CAMPSITES_LOADING';\nexport const CAMPSITES_FAILED = 'CAMPSITES_FAILED';\nexport const ADD_CAMPSITES = 'ADD_CAMPSITES';\n\n// Fetch\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOTIONS_LOADING = 'PROMOTIONS_LOADING';\nexport const ADD_PROMOTIONS = 'ADD_PROMOTIONS';\nexport const PROMOTIONS_FAILED = 'PROMOTIONS_FAILED';","// import { CAMPSITES } from '../shared/campsites';\nimport * as ActionTypes from './ActionTypes';\n\n// Create a reducer which will take a section of the state\n// and update it with a Redux action object\n// Initialize the state with CAMPSITES if it doesn't exist\nexport const Campsites = (\n    state = {\n        isLoading: true,\n        errMess: null,\n        campsites: []\n    }, \n    action) => {\n        switch (action.type) {\n            case ActionTypes.ADD_CAMPSITES:\n                return {...state, isLoading: false, errMess: null, campsites: action.payload};\n            case ActionTypes.CAMPSITES_LOADING:\n                return {...state, isLoading: true, errMess: null, campsites: []};\n            case ActionTypes.CAMPSITES_FAILED:\n                return {...state, isLoading: false, errMess: action.payload};\n            default:\n                return state;\n        }\n    };","// This reducer handles the comments part of the state\nimport * as ActionTypes from './ActionTypes';\n\n// The comments reducer takes the comments part of the state and\n// a Redux action object {type, payload} and makes some change to\n// the state before returning a new, updated (comments) state\n\nexport const Comments = (state = { errMess: null, comments: []}, action) => { \n// the state is initialized with the comments array (an arr of obj)\n// console.log(\"old state:\", state);\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, errMess: action.payload};\n\n        case ActionTypes.ADD_COMMENT:   // addComment(campsiteId, rating, author, text)\n            const comment = action.payload; //an object with the property identifiers campsiteId, rating, author, text\n\n            // Return the updated state to the redux store\n            // The state here is a string array of comments\n            // console.log(\"new state\", state.concat(comment));\n            return {...state, comments: state.comments.concat(comment)}; \n        default:\n            return state;\n    }\n};\n\n// Next step: Update MainComponent and CampsiteInfoComponent to dispatch the ADD_COMMENT action","export const PARTNERS = [\r\n    {\r\n        id: 0,\r\n        name: \"Bootstrap Outfitters\",\r\n        image: \"/assets/images/bootstrap-logo.png\",\r\n        featured: false,\r\n        description: \"Bootstrap Outfitters supplies you with the gear you need at prices you can't beat.\"\r\n    },\r\n    {\r\n        id: 1,\r\n        name: \"Git Out Expeditions\",\r\n        image: \"/assets/images/git-logo.png\",\r\n        featured: false,\r\n        description: \"Join Git Out Expeditions to explore new horizons with a group of other adventurers!\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Mongo Fly Shop\",\r\n        image: \"/assets/images/mongo-logo.png\",\r\n        featured: false,\r\n        description: \"Need a new fishing pole, a tacklebox, or flies of all kinds? Stop by Mongo Fly Shop.\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Node Outdoor Apparel\",\r\n        image: \"/assets/images/node-logo.png\",\r\n        featured: true,\r\n        description: \"From polar fleeces to swimsuits, hiking boots to waders, a visit to Node will be sure to get you covered.\"\r\n    }\r\n]","// This reducer handles the partners part of the state\nimport { PARTNERS } from '../shared/partners';\n\nexport const Partners = (state = PARTNERS, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};","// This reducer handles the promotions part of the state\nimport * as ActionTypes from './ActionTypes';\n// import { PROMOTIONS } from '../shared/promotions';\n\nexport const Promotions = (state = { isLoading: true,\n                                        errMess: null,\n                                        promotions: [] }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOTIONS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOTIONS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOTIONS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n            \n        default:\n            return state;\n    }\n};","import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <div className=\"col\">\n            <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\" />\n            <p>Loading...</p>\n        </div>\n    );\n};","// Server config\n// You will be able to use this exported constant in your other files, and if your server address ever changes, you can update it in this file.\nexport const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { FadeTransform } from 'react-animation-components';\nimport {Loading} from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderCard({item, isLoading, errMess}) {\n    // console.log(\"RenderCard: \", item);\n    if (isLoading) {\n        return <Loading />;\n    }\n    if (errMess) {\n        return <h4>{errMess}</h4>;\n    }\n    // if (item) \n    return (\n        <FadeTransform\n            in\n            transformProps={{\n                exitTransform: 'scale(0.5) translateY(50%)'\n            }}\n        >\n            <Card>\n                <CardImg src={baseUrl + item.image} alt={item.name} />\n                <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    <CardText>{item.description}</CardText>\n                </CardBody>\n            </Card>\n        </FadeTransform>\n    );\n    // return null\n}\n\nfunction Home(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md m-1\">\n                    <RenderCard \n                        item={props.campsite}\n                        isLoading={props.campsitesLoading}\n                        errMess={props.campsitesErrMess}\n                    />\n                </div>\n                <div className=\"col-md m-1\">\n                    <RenderCard item={props.promotion} \n                                isLoading={props.promotionLoading}\n                                errMess={props.promotionErrMess}\n                    />\n                </div>\n                <div className=\"col-md m-1\">\n                    <RenderCard item={props.partner} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home; ","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {Loading} from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderDirectoryItem({campsite}) {\n    return (\n        <Card>\n            <Link to={`/directory/${campsite.id}`}>\n                <CardImg width=\"100%\" src={baseUrl + campsite.image} alt={campsite.name} />\n                <CardImgOverlay>\n                    <CardTitle>{campsite.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nfunction Directory(props) {\n    \n    const directory = props.campsites.campsites.map(campsite => {\n        return (\n            <div key={campsite.id} className=\"col-md-5 m-1\">\n                <RenderDirectoryItem campsite={campsite} />\n            </div>\n        );\n    });\n\n    if (props.campsites.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.campsites.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.campsites.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Directory</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>Directory</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row\">\n                {directory}\n            </div>\n        </div>\n    );\n}\n\nexport default Directory;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardImg, CardText, CardBody, Button, Breadcrumb, BreadcrumbItem,\n        Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\nimport {Control, LocalForm, Errors} from 'react-redux-form';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\nimport {Loading} from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n//Input Validation Methods\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\n\nfunction RenderCampsite({campsite}) {\n        return (\n            <div className=\"col-md-5 m-1\">\n                <FadeTransform\n                    in\n                    transformProps={{\n                        exitTransform: 'scale(0.5) translateY(-50%)'\n                    }}\n                >\n                    <Card>\n                         <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n                         <CardBody>\n                             <CardText>{campsite.description}</CardText>\n                         </CardBody>\n                    </Card>\n                </FadeTransform>\n            </div>\n        );\n    }\n\nfunction RenderComments({comments, postComment, campsiteId}) {\n    if (comments) {\n        return (\n            <div className=\"col-md-5 m-1\">\n            <h4>Comments</h4>\n            <Stagger in>\n                {\n                    comments.map( comment => {\n                        return (\n                            <Fade>\n                                <div>\n                                    <p>\n                                        {comment.text}<br/>-- {comment.author}, {new Intl.DateTimeFormat(\n                                            'en-US', { year: 'numeric', month: 'short', day: '2-digit'})\n                                            .format(new Date(Date.parse(comment.date)))}\n                                    </p>\n                                </div>\n                            </Fade>\n                            );\n                    })\n                }\n            </Stagger>\n            \n            <br />\n            <CommentForm campsiteId={campsiteId} postComment={postComment} />\n            </div>\n        );\n    }\n\n    //else\n    return (<div></div>);\n}\n\nfunction CampsiteInfo(props) {\n    if (props.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    if (props.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h4>{props.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    if (props.campsite) {\n        return (\n            <div class=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderCampsite campsite={props.campsite} />\n                    <RenderComments \n                        comments={props.comments}\n                        postComment={props.postComment}\n                        campsiteId={props.campsite.id}\n                    />\n                </div>\n                \n            </div>\n        );\n    }\n    //else\n    return (<div></div>);\n\n}\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {  // only set state of local methods defined in the component\n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.campsiteId, values.rating, values.author, values.text);\n    }\n\n    render() {\n        return (\n            <React.Fragment> {/* Use React.Fragment instead of wrapping multiple elements in a <div> to avoid adding an extra, unecessary node */}\n\n                <Button outline onClick={this.toggleModal}><i className=\"fa fa-lg fa-pencil\"/> Submit Comment</Button>\n\n                {/* Open the comment form modal when \"Submit Comment\" is clicked */}\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}> {/* isOpen and toggle are built-in attributes of <Modal> in reactstrap */}\n                    \n                    <ModalHeader toggle={this.toggleModal}> {/* adding toggle here allows user to close modal when it is open */}\n                        Submit Comment\n                    </ModalHeader> \n\n                    <ModalBody>\n                        \n                        <LocalForm onSubmit={values => this.handleSubmit(values)}> {/* Redux forms handle submit events here */}\n\n                            {/* Select rating 1-5 */}\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"rating\">Rating</Label>\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                            className=\"form-control\"\n                                >\n                                    {/* Reference: https://davidkpiano.github.io/react-redux-form/docs/api/Control.html */}\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                </Control.select>\n                            </div>\n\n                            {/* Author Name */}\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"author\">Your Name</Label>\n                                <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                            placeholder=\"Your Name\"\n                                            className=\"form-control\"\n                                            validators = {{\n                                                minLength: minLength(2),\n                                                maxLength: maxLength(15)\n                                            }}\n                                />\n                                <Errors \n                                    model=\".author\"\n                                    className=\"text-danger\"\n                                    show=\"touched\"\n                                    component=\"div\"\n                                    messages={{\n                                        minLength: \"Must be at least 2 characters\",\n                                        maxLength: \"Must be 15 characters or less\"\n                                    }}\n                                />\n                            </div>\n\n                            {/* Comment Textarea */}\n                            <div className=\"form-group\">\n                                <Label htmlFor=\"text\">Comment</Label>\n                                <Control.textarea model=\".text\" id=\"text\" name=\"text\"\n                                            className=\"form-control\"\n                                />\n                            </div>\n\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n\n                        </LocalForm>\n\n                    </ModalBody>\n\n                </Modal>\n\n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default CampsiteInfo;","import React, { Component }  from 'react';\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, \n    Jumbotron, Button, Modal, ModalHeader, ModalBody, \n    Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = {\n          isNavOpen: false,\n          isModalOpen: false\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {    //this would normally have backend code\n        alert(`Username: ${this.username.value} Password: ${this.password.value} Remember: ${this.remember.checked}`);\n        this.toggleModal(); //close modal\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Jumbotron fluid>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h1>NuCamp</h1>\n                                <h2>a better way to camp</h2>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n\n                <Navbar dark sticky=\"top\" expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src=\"/assets/images/logo.png\" height=\"30\" width=\"30\" alt=\"NuCamp Logo\" /></NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <i className=\"fa fa-home fa-lg\" /> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/directory\">\n                                        <i className=\"fa fa-list fa-lg\" /> Directory\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <i className=\"fa fa-info fa-lg\" /> About\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <i className=\"fa fa-address-card fa-lg\" /> Contact Us\n                                    </NavLink>\n                                </NavItem>\n\n                                {/* Login button */}\n                                <span className=\"navbar-text ml-auto\">  {/* styles the button to match navbar and align right */}\n                                    <Button outline onClick={this.toggleModal}> {/* toggles modal on click */}\n                                        <i className=\"fa fa-sign-in fa-lg\" /> Login\n                                    </Button>\n                                </span>\n\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}> {/* isOpen and toggle are built-in attributes of <Modal> in reactstrap */}\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader> {/* adding toggle here allows user to close modal when it is open */}\n                    <ModalBody>\n                    <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={input => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={input => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                        innerRef={input => this.remember = input} />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return (\n        <footer className=\"site-footer\">\n            <div className=\"container\">\n                <div className=\"row\">             \n                    <div className=\"col-4 col-sm-2 offset-1\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                        <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/directory'>Directory</Link></li>\n                            <li><Link to='/aboutus'>About</Link></li>\n                            <li><Link to='/contactus'>Contact</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-6 col-sm-3 text-center\">\n                        <h5>Social</h5>\n                        <a className=\"btn btn-social-icon btn-instagram\" href=\"http://instagram.com/\"><i className=\"fa fa-instagram\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/\"><i className=\"fa fa-facebook\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\" /></a>{' '}\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\" /></a> \n                    </div>\n                    <div className=\"col-sm-4 text-center\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:notreal@notreal.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {Control, Form, Errors } from 'react-redux-form';\n\n//Validation functions\n//Review logical operators here: https://javascript.info/logical-operators\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);   //unary plus operator converts a string to a number\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {  //set inital states here\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false, //Does user want to be contacted?\n            contactType: 'By Phone',\n            feedback: '',\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    //This event handler is fired when a user enters an input field then leaves it (loses focus)\n    //When hadle blur is triggered it will change the field's \"touched\" state to true\n    //Add this event handler to every form field (i.e. <input>) you want to track\n    //The \"field\" parameter accepts a string with the name of the field (i.e. value of \"name\" attribute of the <input> element)\n    //Binding using arrow function syntax. Why? We're not passing an event object here but rather a string\n    // handleBlur = (field) => {\n    //     return () => { \n    //         this.setState({\n    //             touched: {...this.state.touched, [field]: true} //changes only one of the properties in \"touched\"\n    //         });\n    //     }\n    // }\n\n\n    //Update the state of the form field \n    // handleInputChange(event) {\n    //     const target = event.target;    //the <input> element\n    //     const name = target.name;       //the value of <input>'s \"name\" attribute    \n\n    //     //Is <input> a checkbox? If yes, then return <input>'s checked attribute (boolean) to get the user's choice\n    //     //If no then use <input>'s value attribute to get the text that the user entered\n    //     const value = target.type === 'checkbox' ? target.checked : target.value;   //target.type is the value of <input>'s \"type\" attribute (i.e. \"button\", \"checkbox\", \"color\", \"month\", etc.)\n    \n    //     //Create an object with a computed property name using the value of <input>'s name attribute\n    //     //Update the state with the user's input -> sets firstName, lastName, phoneNum, email, agree, contactType, or feedback to the user's input value\n    //     this.setState({\n    //         [name]: value\n    //     });\n    // }\n\n    //Log current state to the console\n    handleSubmit(values) {\n        console.log('Current state is: ' + JSON.stringify(values));\n        alert('Current state is: ' + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n\n        //Initialize the errors array (will be blank at this point because fields have not yet been touched)\n        // const errors = this.validate(this.state.firstName, this.state.lastName, this.state.phoneNum, this.state.email);\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n    \n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                    <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"  //match model in corresponding control component\n                                        show=\"touched\"  //only show error messages if the field has been in focus\n                                        component=\"div\" //wrap the error message in a div\n                                        messages={{ //if validator(s) return false\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nfunction RenderPartner({partner}) {\n    if (partner) {\n        return (\n            <React.Fragment>\n                <Media object src={partner.image} alt={partner.name} width=\"150\" />\n                <Media body className=\"ml-5 mb-4\">\n                    <Media heading>{partner.name}</Media>\n                    {partner.description}\n                </Media>\n            </React.Fragment>\n            );\n    }\n    return <div/>;\n}\n\nfunction About(props) {\n\n    const partners = props.partners.map(partner => {\n        return (\n            <Media tag=\"li\" key={partner.id}>\n                <RenderPartner partner={partner} />\n            </Media>\n        );\n    });\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>About Us</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-sm-6\">\n                    <h3>Our Mission</h3>\n                    <p>We present a curated database of the best campsites in the vast woods and backcountry of the World Wide Web Wilderness. We increase access to adventure for the public while promoting safe and respectful use of resources. The expert wilderness trekkers on our staff personally verify each campsite to make sure that they are up to our standards. We also present a platform for campers to share reviews on campsites they have visited with each other.</p>\n                </div>\n                <div className=\"col-sm-6\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\"><h3>Facts At a Glance</h3></CardHeader>\n                        <CardBody>\n                            <dl className=\"row\">\n                                <dt className=\"col-6\">Founded</dt>\n                                <dd className=\"col-6\">February 3, 2016</dd>\n                                <dt className=\"col-6\">No. of Campsites in 2019</dt>\n                                <dd className=\"col-6\">563</dd>\n                                <dt className=\"col-6\">No. of Reviews in 2019</dt>\n                                <dd className=\"col-6\">4388</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">42</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col\">\n                    <Card className=\"bg-light mt-3\">\n                        <CardBody>\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">I will not follow where the path may lead, but I will go where there is no path, and I will leave a trail.</p>\n                                <footer className=\"blockquote-footer\">Muriel Strode,{' '}\n                                    <cite title=\"Source Title\">\"Wind-Wafted Wild Flowers\" -\n                                    The Open Court, 1903</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h3>Community Partners</h3>\n                </div>\n                <div className=\"col mt-4\">\n                    <Media list>\n                        {partners}\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;","// This is where we define all the action creators\n// Action creators return an action object with the property identifiers \"type\" and \"payload\"\n// The \"payload\" (arbitrary name) contains the data you want to send to the state to update it\nimport * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\n//===== Redux Thunk and Logger Actions =======\n\n// For now we simulate a server with a brief delay using setTimeout()\nexport const fetchCampsites = () => dispatch => {\n\n    dispatch(campsitesLoading());\n\n    // setTimeout(() => {\n    //     dispatch(addCampsites(CAMPSITES));\n    // }, 2000); // 2000 ms = 2 sec\n\n    return fetch(baseUrl + 'campsites')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(campsites => dispatch(addCampsites(campsites)))\n        .catch(error => dispatch(campsitesFailed(error.message)));\n};\n\nexport const campsitesLoading = () => ({\n    type: ActionTypes.CAMPSITES_LOADING\n});\n\nexport const campsitesFailed = errMess => ({\n    type: ActionTypes.CAMPSITES_FAILED,\n    payload: errMess\n});\n\nexport const addCampsites = campsites => ({\n    type: ActionTypes.ADD_CAMPSITES,\n    payload: campsites\n});\n\nexport const fetchComments = () => dispatch => {    \n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                error.response = response;\n                throw error;\n            }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = errMess => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\nexport const addComments = comments => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const addComment = comment => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\n    \n    const newComment = {\n        campsiteId: campsiteId,\n        rating: rating,\n        author: author,\n        text: text\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n            method: \"POST\",\n            body: JSON.stringify(newComment),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => { throw error; }\n        )\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {\n            console.log('post comment', error.message);\n            alert('Your comment could not be posted\\nError: ' + error.message);\n        });\n};\n\nexport const fetchPromotions = () => dispatch => {\n    dispatch(promotionsLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromotions(promotions)))\n        .catch(error => dispatch(promotionsFailed(error.message)));\n};\n\nexport const promotionsLoading = () => ({\n    type: ActionTypes.PROMOTIONS_LOADING\n});\n\nexport const promotionsFailed = errMess => ({\n    type: ActionTypes.PROMOTIONS_FAILED,\n    payload: errMess\n});\n\nexport const addPromotions = promotions => ({\n    type: ActionTypes.ADD_PROMOTIONS,\n    payload: promotions\n});","import React, { Component } from 'react';\n\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\n\nimport Home from './HomeComponent';\nimport Directory from './DirectoryComponent';\nimport CampsiteInfo from './CampsiteInfoComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\n\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { postComment, fetchCampsites, fetchComments, fetchPromotions } from '../redux/ActionCreators';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return {\n        campsites: state.campsites,\n        comments: state.comments,\n        partners: state.partners,\n        promotions: state.promotions\n    };\n};\n\n// Implement the ADD_COMMENT action with mapDispatchToProps then pass it to connect() at end of module\nconst mapDispatchToProps = {\n    postComment: (campsiteId, rating, author, text) => { // give the property the same name as the action creator\n        return postComment(campsiteId, rating, author, text); \n    },   // returns and object\n    fetchCampsites: () => (fetchCampsites()),\n    resetFeedbackForm: () => (actions.reset('feedbackForm')), // feedbackForm from configureStore.js\n    fetchComments: () => (fetchComments()),\n    fetchPromotions: () => (fetchPromotions())\n}\n\nclass Main extends Component {\n\n    componentDidMount() {\n        this.props.fetchCampsites();\n        this.props.fetchComments();\n        this.props.fetchPromotions();\n    }\n\n    // No constructor needed to hold state. Redux will hold state in the store\n    render() {\n        const HomePage = () => {\n            console.log(\"Home Page Props: \", this.props);\n            return (\n                <Home\n                    campsite={this.props.campsites.campsites.filter(campsite => campsite.featured)[0]}\n                    campsitesLoading={this.props.campsites.isLoading}\n                    campsitesErrMess={this.props.campsites.errMess}\n                    promotion={this.props.promotions.promotions.filter(promotion => promotion.featured)[0]}\n                    promotionLoading={this.props.promotions.isLoading}\n                    promotionErrMess={this.props.promotions.errMess}\n                    partner={this.props.partners.filter(partner => partner.featured)[0]}\n                />\n            );\n        };\n\n        const CampsiteWithId = ({match}) => {\n            return (\n                <CampsiteInfo \n                    campsite={this.props.campsites.campsites.filter(campsite => campsite.id === +match.params.campsiteId)[0]}\n                    isLoading={this.props.campsites.isLoading}\n                    errMess={this.props.campsites.errMess}\n                    comments={this.props.comments.comments.filter(comment => comment.campsiteId === +match.params.campsiteId)}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                />\n            );\n        }; \n\n        return (\n            <div>\n                <Header />\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                        <Switch>\n                            <Route path='/home' component={HomePage} />\n                            <Route exact path='/directory' render={() => <Directory campsites={this.props.campsites} />} />\n                            <Route path='/directory/:campsiteId' component={CampsiteWithId} />\n                            <Route exact path='/contactus' render={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\n                            <Route exact path='/aboutus' render={() => <About partners={this.props.partners} />} />\n                            <Redirect to='/home' />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer />\n            </div>\n        );\n    }\n}\n\n// Pass mapStateToProps to connect() so that the action creator function called\n// addComment is available inside the Main component as a prop\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport Main from './components/MainComponent';\nimport './App.css';\n\nconst store = ConfigureStore(); \n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n              <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n  );\n  }\n}\n\n\nexport default App;\n","// The Redux store combines all the reducers\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { InitialFeedback } from './form';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport { Campsites } from './campsites';\nimport { Comments } from './comments';\nimport { Partners } from './partners';\nimport { Promotions } from './promotions';\n\n// The Redux createStore() function requires that all your reducers \n// be combined into ONE single root reducer to be used as an argument\n// to createStore().\nexport const ConfigureStore = () => {\n    //const store = createStore( Reducer, initialState );\n    const store = createStore(\n        combineReducers({\n            campsites: Campsites,   // the property identifiers here\n            comments: Comments,     // define how the data from the\n            partners: Partners,     // reducers will be kept in the \n            promotions: Promotions,  // overall state object tree\n            ...createForms({\n                feedbackForm: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)  //this is all you need to use logger but thunk needs more setup\n    );\n    return store;\n};\n\n// Splitting A Reducer\n//import { Reducer, initialState } from './reducer';\n//We can remove the reducer.js file because we've now split the data\n//into separate files, each with it's own reducer defined","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'typeface-lobster';\nimport 'typeface-open-sans';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css'; \nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}